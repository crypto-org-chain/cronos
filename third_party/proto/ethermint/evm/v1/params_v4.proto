syntax = "proto3";
package ethermint.evm.v1;

import "gogoproto/gogo.proto";
import "ethermint/evm/v1/chain_config_v0.proto";

option go_package = "github.com/evmos/ethermint/x/evm/types";

// V4Params defines the EVM module parameters
message V4Params {
  // evm_denom represents the token denomination used to run the EVM state
  // transitions.
  string evm_denom = 1 [(gogoproto.moretags) = "yaml:\"evm_denom\""];
  // enable_create toggles state transitions that use the vm.Create function
  bool enable_create = 2 [(gogoproto.moretags) = "yaml:\"enable_create\""];
  // enable_call toggles state transitions that use the vm.Call function
  bool enable_call = 3 [(gogoproto.moretags) = "yaml:\"enable_call\""];
  // extra_eips defines the additional EIPs for the vm.Config
  ExtraEIPs extra_eips = 4 [(gogoproto.customname) = "ExtraEIPs", (gogoproto.nullable) = false];
  // chain_config defines the EVM chain configuration parameters
  V0ChainConfig chain_config = 5 [(gogoproto.nullable) = false];
  // allow_unprotected_txs defines if replay-protected (i.e non EIP155
  // signed) transactions can be executed on the state machine.
  bool allow_unprotected_txs = 6;
}

// ExtraEIPs represents extra EIPs for the vm.Config
message ExtraEIPs {
  // eips defines the additional EIPs for the vm.Config
  repeated int64 eips = 1 [(gogoproto.customname) = "EIPs", (gogoproto.moretags) = "yaml:\"eips\""];
}