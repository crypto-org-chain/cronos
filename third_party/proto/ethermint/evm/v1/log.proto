syntax = "proto3";
package ethermint.evm.v1;

import "gogoproto/gogo.proto";

option go_package = "github.com/evmos/ethermint/x/evm/types";

// Log represents an protobuf compatible Ethereum Log that defines a contract
// log event. These events are generated by the LOG opcode and stored/indexed by
// the node.
//
// NOTE: address, topics and data are consensus fields. The rest of the fields
// are derived, i.e. filled in by the nodes, but not secured by consensus.
message Log {
  // address of the contract that generated the event
  string address = 1;
  // topics is a list of topics provided by the contract.
  repeated string topics = 2;
  // data which is supplied by the contract, usually ABI-encoded
  bytes data = 3;

  // block_number of the block in which the transaction was included
  uint64 block_number = 4 [(gogoproto.jsontag) = "blockNumber"];
  // tx_hash is the transaction hash
  string tx_hash = 5 [(gogoproto.jsontag) = "transactionHash"];
  // tx_index of the transaction in the block
  uint64 tx_index = 6 [(gogoproto.jsontag) = "transactionIndex"];
  // block_hash of the block in which the transaction was included
  string block_hash = 7 [(gogoproto.jsontag) = "blockHash"];
  // index of the log in the block
  uint64 index = 8 [(gogoproto.jsontag) = "logIndex"];

  // removed is true if this log was reverted due to a chain
  // reorganisation. You must pay attention to this field if you receive logs
  // through a filter query.
  bool removed = 9;
}