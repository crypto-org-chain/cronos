package versiondb

import (
	"bufio"
	"bytes"
	"encoding/hex"
	"strings"
	"testing"

	"github.com/cosmos/cosmos-sdk/store/types"
	sdk "github.com/cosmos/cosmos-sdk/types"
	"github.com/stretchr/testify/require"
)

const data = "0000000000000873230a0462616e6b1a06007374616b65221332303030303030303832333839303139353230300a0462616e6b1a1b021493354845030274cd4bf1686abd60ab28ec52e1a77374616b65220b3832333839303139353230250a0462616e6b10011a1b0214dc6f17bbec824fff8f86587966b2047db6ab73677374616b65250a0462616e6b10011a1b0214f1829676db577682e944fc3493d451b67ff3e29f7374616b65270a0462616e6b1a1c037374616b65001493354845030274cd4bf1686abd60ab28ec52e1a7220100260a0462616e6b10011a1c037374616b650014dc6f17bbec824fff8f86587966b2047db6ab7367260a0462616e6b10011a1c037374616b650014f1829676db577682e944fc3493d451b67ff3e29f3a0a0c646973747269627574696f6e1a010022270a250a057374616b65121c31363437373830333930343030303030303030303030303030303030290a0c646973747269627574696f6e1a010122160a14c352ad46450b10f1763ab28ade60aeecf4a276e7500a0c646973747269627574696f6e1a16021438b4089f7762e0c20e9bed8e991e074550ef5a5222280a260a057374616b65121d3432343330333435303532383030303030303030303030303030303030500a0c646973747269627574696f6e1a16021457f96e6b86cdefdb3d412547816a82e3e0ebf9d222280a260a057374616b65121d3338333130383934303736383030303030303030303030303030303030520a0c646973747269627574696f6e1a16061438b4089f7762e0c20e9bed8e991e074550ef5a52222a0a260a057374616b65121d33383138373331303534373532303030303030303030303030303030301002520a0c646973747269627574696f6e1a16061457f96e6b86cdefdb3d412547816a82e3e0ebf9d2222a0a260a057374616b65121d333434373938303436363931323030303030303030303030303030303010024f0a0c646973747269627574696f6e1a16071438b4089f7762e0c20e9bed8e991e074550ef5a5222270a250a057374616b65121c343234333033343530353238303030303030303030303030303030304f0a0c646973747269627574696f6e1a16071457f96e6b86cdefdb3d412547816a82e3e0ebf9d222270a250a057374616b65121c33383331303839343037363830303030303030303030303030303030180a096665656d61726b65741a010122080000000000000000450a046d696e741a0100223a0a1231323939393939373937313031363533303112243235393939393936343737353631363138383736303138323436303338333338383834332a0a06706172616d731a116665656d61726b65742f42617365466565220d223736363136313830393832225b0a08736c617368696e671a1601145c0f70af16fa6e056d5a722651c586b24f10908322370a3163726376616c636f6e7331747338687074636b6c666871326d323677676e39723376786b663833707979726c7067616832180122005b0a08736c617368696e671a160114c352ad46450b10f1763ab28ade60aeecf4a276e722370a3163726376616c636f6e73316364663236336a39707667307a6133366b32396475633977616e363279616838736b71686d7418012200cb070a077374616b696e671a02503222bb070a92030a02080b120c63726f6e6f735f3737372d311802220c08ebdc919c0610f89ce7db022a480a204f4280f40de2dea51618996576a960ee849cf8c605af6ea7912b7d462dfbf21c1224080112207b8624266881e12487a887ec8b2a5744d496422c245f33925f2b33ecd0c0ce8b3220b17b7bc6e2317e48eeab99202baf538fee726ac57f81d8f99e1cd94fa8ac48e03a20e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855422095e4fff352417c37f09c26c5c89e1939fb995f1d477b272d0f450ed1e6b779d34a2095e4fff352417c37f09c26c5c89e1939fb995f1d477b272d0f450ed1e6b779d35220252fe7cf36dd1bb85dafc47a08961df0cfd8c027defa5e01e958be121599db9d5a20a911dcd4c68befef4cf9798ee12c94da9ee2d60b5c43f620814d1e59ef3ad0316220e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b8556a20e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b8557214c352ad46450b10f1763ab28ade60aeecf4a276e71290020a3163726376616c6f70657231387a367133386d68767473767972356d616b38666a38733867346777376b6a6a70306530646812430a1d2f636f736d6f732e63727970746f2e656432353531392e5075624b657912220a20cdc66f7519ba5a3101c5b62a65bd4a7a767e9cadb22504e25bf1fdf78433109220032a13313030303030303030303030303030303030303225313030303030303030303030303030303030303030303030303030303030303030303030303a070a056e6f6465314a00524a0a3b0a1231303030303030303030303030303030303012123230303030303030303030303030303030301a113130303030303030303030303030303030120b08e4dc919c0610f0b180535a01311290020a3163726376616c6f70657231326c756b75367578656868616b303270793472637a36357a753073776837776a36756c726c6712430a1d2f636f736d6f732e63727970746f2e656432353531392e5075624b657912220a20b7eda2d527f8ecf441ad339841632bfe87b289de17d95d309fc091f7065ff75520032a13313030303030303030303030303030303030303225313030303030303030303030303030303030303030303030303030303030303030303030303a070a056e6f6465304a00524a0a3b0a1231303030303030303030303030303030303012123230303030303030303030303030303030301a113130303030303030303030303030303030120b08e4dc919c0610f0b180535a0131"

func TestReadFileStreamer(t *testing.T) {
	buf, err := hex.DecodeString(strings.Replace(data, "\n", "", -1))
	require.NoError(t, err)

	size := sdk.BigEndianToUint64(buf[:8])
	require.Equal(t, size+8, uint64(len(buf)))

	changeSet, err := ReadFileStreamer(bufio.NewReader(bytes.NewReader(buf[8:])))
	require.NoError(t, err)

	require.Equal(t, 21, len(changeSet))
	expItem := types.StoreKVPair{StoreKey: "bank", Delete: false, Key: []uint8{0x0, 0x73, 0x74, 0x61, 0x6b, 0x65}, Value: []uint8{0x32, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x38, 0x32, 0x33, 0x38, 0x39, 0x30, 0x31, 0x39, 0x35, 0x32, 0x30}}
	require.Equal(t, expItem, changeSet[0])
}
