name: Run Lint
# Lint runs golangci-lint over the entire cronos repository This workflow is
# run on every pull request and push to main The `golangci` will pass without
# running if no *.{go, mod, sum} files have been changed.
on:
  pull_request:
  push:
    branches:
      - main
      - release/**

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  golangci:
    name: Run golangci-lint
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: 1.18
      - uses: actions/checkout@v3
      - uses: technote-space/get-diff-action@v6
        with:
          SUFFIX_FILTER: |
            .go
            .mod
            .sum
      - uses: golangci/golangci-lint-action@v3
        with:
          # Required: the version of golangci-lint is required and must be specified without patch version: we always use the latest patch version.
          version: v1.45
          args: --timeout 10m
          github-token: ${{ secrets.GITHUB_TOKEN }}
        # Check only if there are differences in the source code
        if: "env.GIT_DIFF"

  lint-python:
    name: Lint python
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - id: changed-files
        uses: tj-actions/changed-files@v34
        with:
          files: |
            **/poetry.lock
            **/pyproject.toml
            **/*.py
      - uses: cachix/install-nix-action@v15
        if: steps.changed-files.outputs.any_changed == 'true'
      - uses: cachix/cachix-action@v10
        if: steps.changed-files.outputs.any_changed == 'true'
        with:
          name: cronos
      - run: nix-shell -I nixpkgs=./nix -p test-env --run "make lint-py"
        if: steps.changed-files.outputs.any_changed == 'true'

  lint-nix:
    name: Lint nix
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - id: changed-files
        uses: tj-actions/changed-files@v34
        with:
          files: |
            *.nix
            **/*.nix
      - uses: cachix/install-nix-action@v15
        if: steps.changed-files.outputs.any_changed == 'true'
      - run: nix-shell -I nixpkgs=./nix -p nixpkgs-fmt --run "make lint-nix"
        if: steps.changed-files.outputs.any_changed == 'true'
