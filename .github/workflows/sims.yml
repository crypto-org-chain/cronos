name: Sims
# Sims workflow runs multiple types of simulations (nondeterminism, import-export, after-import, multi-seed-short)
# This workflow will run on main and release branches, if a .go, .mod or .sum file have been changed
on:
  push:
    paths-ignore:
      - 'docs/**'
    branches:
      - main
      - release/**
    tags:
      - "*"
  pull_request:
    types: auto_merge_enabled
  issue_comment:
    types: [created, edited]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    if: >-
      (github.event_name == 'issue_comment' && startsWith(github.event.comment.body, '/runsim')) ||
      github.event_name == 'push' || github.event_name == 'pull_request'
    outputs:
      repo_name: ${{ steps.pr_data.outputs.repo_name }}
      ref: ${{ steps.pr_data.outputs.ref }}
    steps:
      # if we could have secrets.ORG_READ_BOT_PAT, we can check against team rather than organization.
      - uses: tspascoal/get-user-teams-membership@v1.0.2
        id: checkMember
        if: github.event_name == 'issue_comment'
        with:
          username: ${{ github.actor }}
          team: 'cronos-dev'
          GITHUB_TOKEN: ${{ secrets.ORG_READ_BOT_PAT }}
      - name: Comment PR for authentication failure
        uses: crypto-org-chain/actions-pull-request-add-comment@master
        if: (steps.checkMember.outputs.isTeamMember == 'false') && (github.event_name == 'issue_comment')
        with:
          message: |
            Sorry only cronos-dev team member could run simulations by '/runsim'. 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Fail and exit the job if authentication failed
        if: (steps.checkMember.outputs.isTeamMember == 'false') && (github.event_name == 'issue_comment')
        run: exit 1
      - name: Comment PR for Sim test started
        uses: crypto-org-chain/actions-pull-request-add-comment@master
        if: github.event_name == 'issue_comment'
        with:
          message: |
            Simulation tests started and triggered by `/runsim`. 
            Can check further progress [here](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Github API Request
        id: request
        uses: octokit/request-action@v2.0.0
        if: github.event_name == 'issue_comment'
        with:
          route: ${{ github.event.issue.pull_request.url }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Get Comment PR informations
        id: pr_data
        if: github.event_name == 'issue_comment'
        run: |
          echo "::set-output name=repo_name::${{ fromJson(steps.request.outputs.data).head.repo.full_name }}"
          comment_hash=`echo ${{ github.event.comment.body }} | cut -d' ' -f2` # get commit hash if any
          if [[ "${comment_hash}" == "/runsim" ]]; then 
            echo "::set-output name=ref::${{ fromJson(steps.request.outputs.data).head.ref }}" # use default head ref
          else
            echo "::set-output name=ref::${comment_hash}" # use comment provided ref
          fi
      - name: Checkout Comment PR Branch
        uses: actions/checkout@v2
        if: github.event_name == 'issue_comment'
        with:
          submodules: true
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ steps.pr_data.outputs.repo_name }}
          ref: ${{ steps.pr_data.outputs.ref }}
      - name: Normal check out code
        uses: actions/checkout@v2
        with:
          submodules: true
        if: github.event_name == 'push' || github.event_name == 'pull_request' 
      - uses: actions/setup-go@v2.1.3
        with:
          go-version: 1.18
      - name: Display go version
        run: go version
      - run: make build

  install-runsim:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/setup-go@v2.1.3
        with:
          go-version: 1.18
      - name: Display go version
        run: go version
      - name: Install runsim
        run: export GO111MODULE="on" && go install github.com/cosmos/tools/cmd/runsim@v1.0.0
      - uses: actions/cache@v2.1.6
        with:
          path: ~/go/bin
          key: ${{ runner.os }}-go-runsim-binary

  test-sim-nondeterminism:
    runs-on: ubuntu-latest
    needs: [build, install-runsim]
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: 1.18.3
      - name: Checkout Comment PR Branch
        uses: actions/checkout@v2
        if: github.event_name == 'issue_comment'
        with:
          submodules: true
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ needs.build.outputs.repo_name }}
          ref: ${{ needs.build.outputs.ref }}
      - name: Normal check out code
        uses: actions/checkout@v2
        if: github.event_name == 'push' || github.event_name == 'pull_request' 
        with:
          submodules: true
      - name: Display go version
        run: go version
      # the original repo technote-space does not include auto_merge_enabled into target events
      # we can move back after this pr merged: https://github.com/technote-space/get-diff-action/pull/193
      - uses: adu-crypto/get-diff-action@gh-actions
        with:
          PATTERNS: |
            **/**.go
            go.mod
            go.sum
        if: github.event_name == 'push' || github.event_name == 'pull_request'
      - uses: actions/cache@v2.1.6
        with:
          path: ~/go/bin
          key: ${{ runner.os }}-go-runsim-binary
        if: >-
          (env.GIT_DIFF && (github.event_name == 'push' || github.event_name == 'pull_request')) ||
          (github.event_name == 'issue_comment' && startsWith(github.event.comment.body, '/runsim'))
      - name: test-sim-nondeterminism
        run: |
          make test-sim-nondeterminism
        if: >-
          (env.GIT_DIFF && (github.event_name == 'push' || github.event_name == 'pull_request')) ||
          (github.event_name == 'issue_comment' && startsWith(github.event.comment.body, '/runsim'))

  test-sim-import-export:
    runs-on: ubuntu-latest
    needs: [build, install-runsim]
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: 1.18.3
      - name: Checkout Comment PR Branch
        uses: actions/checkout@v2
        if: github.event_name == 'issue_comment'
        with:
          submodules: true
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ needs.build.outputs.repo_name }}
          ref: ${{ needs.build.outputs.ref }}
      - name: Normal check out code
        uses: actions/checkout@v2
        if: github.event_name == 'push' || github.event_name == 'pull_request' 
        with:
          submodules: true
      - name: Display go version
        run: go version
      # the original repo technote-space does not include auto_merge_enabled into target events
      # we can move back after this pr merged: https://github.com/technote-space/get-diff-action/pull/193
      - uses: adu-crypto/get-diff-action@gh-actions
        with:
          PATTERNS: |
            **/**.go
            go.mod
            go.sum
        if: github.event_name == 'push' || github.event_name == 'pull_request'
      - uses: actions/cache@v2.1.6
        with:
          path: ~/go/bin
          key: ${{ runner.os }}-go-runsim-binary
        if: >-
          (env.GIT_DIFF && (github.event_name == 'push' || github.event_name == 'pull_request')) ||
          (github.event_name == 'issue_comment' && startsWith(github.event.comment.body, '/runsim'))
      - name: test-sim-import-export
        run: |
          make test-sim-import-export
        if: >-
          (env.GIT_DIFF && (github.event_name == 'push' || github.event_name == 'pull_request')) ||
          (github.event_name == 'issue_comment' && startsWith(github.event.comment.body, '/runsim'))

  test-sim-after-import:
    runs-on: ubuntu-latest
    needs: [build, install-runsim]
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: 1.18.3
      - name: Checkout Comment PR Branch
        uses: actions/checkout@v2
        if: github.event_name == 'issue_comment'
        with:
          submodules: true
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ needs.build.outputs.repo_name }}
          ref: ${{ needs.build.outputs.ref }}
      - name: Normal check out code
        uses: actions/checkout@v2
        if: github.event_name == 'push' || github.event_name == 'pull_request' 
        with:
          submodules: true
      - name: Display go version
        run: go version
      # the original repo technote-space does not include auto_merge_enabled into target events
      # we can move back after this pr merged: https://github.com/technote-space/get-diff-action/pull/193
      - uses: adu-crypto/get-diff-action@gh-actions
        with:
          PATTERNS: |
            **/**.go
            go.mod
            go.sum
        if: github.event_name == 'push' || github.event_name == 'pull_request'
      - uses: actions/cache@v2.1.6
        with:
          path: ~/go/bin
          key: ${{ runner.os }}-go-runsim-binary
        if: >-
          (env.GIT_DIFF && (github.event_name == 'push' || github.event_name == 'pull_request')) ||
          (github.event_name == 'issue_comment' && startsWith(github.event.comment.body, '/runsim'))
      - name: test-sim-after-import
        run: |
          make test-sim-after-import
        if: >-
          (env.GIT_DIFF && (github.event_name == 'push' || github.event_name == 'pull_request')) ||
          (github.event_name == 'issue_comment' && startsWith(github.event.comment.body, '/runsim'))

  test-sim-multi-seed-short:
    runs-on: ubuntu-latest
    needs: [build, install-runsim]
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: 1.18.3
      - name: Checkout Comment PR Branch
        uses: actions/checkout@v2
        if: github.event_name == 'issue_comment'
        with:
          submodules: true
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ needs.build.outputs.repo_name }}
          ref: ${{ needs.build.outputs.ref }}
      - name: Normal check out code
        uses: actions/checkout@v2
        if: github.event_name == 'push' || github.event_name == 'pull_request' 
        with:
          submodules: true
      - name: Display go version
        run: go version
      # the original repo technote-space does not include auto_merge_enabled into target events
      # we can move back after this pr merged: https://github.com/technote-space/get-diff-action/pull/193
      - uses: adu-crypto/get-diff-action@gh-actions
        with:
          PATTERNS: |
            **/**.go
            go.mod
            go.sum
        if: github.event_name == 'push' || github.event_name == 'pull_request'
      - uses: actions/cache@v2.1.6
        with:
          path: ~/go/bin
          key: ${{ runner.os }}-go-runsim-binary
        if: >-
          (env.GIT_DIFF && (github.event_name == 'push' || github.event_name == 'pull_request')) ||
          (github.event_name == 'issue_comment' && startsWith(github.event.comment.body, '/runsim'))
      - name: test-sim-multi-seed-short
        run: |
          make test-sim-multi-seed-short
        if: >-
          (env.GIT_DIFF && (github.event_name == 'push' || github.event_name == 'pull_request')) ||
          (github.event_name == 'issue_comment' && startsWith(github.event.comment.body, '/runsim'))