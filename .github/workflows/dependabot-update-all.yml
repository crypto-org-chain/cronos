name: Dependabot Update All Go Modules
on: pull_request

permissions:
  contents: write
  pull-requests: write

env:
  PR_TITLE: ${{ github.event.pull_request.title }}

jobs:
  update-all:
    runs-on: ubuntu-latest
    if: ${{ github.actor == 'dependabot[bot]' }}
    steps:
      - name: Generate Token
        uses: actions/create-github-app-token@df432ceedc7162793a195dd1713ff69aefc7379e # v1
        id: app-token
        with:
          app-id: "${{ secrets.APP_ID }}"
          private-key: "${{ secrets.APP_PRIVATE_KEY }}"
      - uses: actions/checkout@v4
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}
          token: "${{ steps.app-token.outputs.token }}"
      - uses: actions/setup-go@v5
        with:
          go-version: "1.24"
          check-latest: true
      - name: Extract updated dependency
        id: deps
        run: |
          set -euo pipefail
          # Example title:
          # "build(deps): Bump github.com/cosmos/cosmos-sdk from v0.46.0 to v0.47.0-rc1"
          
          dep_name=$(grep -oE 'github.com/[^ ]+' <<<"$PR_TITLE" || true)
          dep_version=$(grep -oE 'to v?([0-9]+\.[0-9]+\.[0-9]+(-[A-Za-z0-9.]+)?)' <<<"$PR_TITLE" | awk '{print $2}' || true)
          
          if [[ -z "$dep_name" || -z "$dep_version" ]]; then
             echo "❌ Unable to parse dependency from PR title: $PR_TITLE" >&2
             exit 1
          fi
          
          echo "name=$dep_name" >> "$GITHUB_OUTPUT"
          echo "version=${dep_version#v}" >> "$GITHUB_OUTPUT"
      - name: Update all Go modules
        run: |
          ./scripts/go-update-dep-all.sh ${{ format('{0}@v{1}', steps.deps.outputs.name, steps.deps.outputs.version) }}
          ./scripts/go-mod-tidy-all.sh
      - name: Commit changes
        uses: EndBug/add-and-commit@v9
        with:
          default_author: user_info
          message: "${{ github.event.pull_request.title }} for all modules"
