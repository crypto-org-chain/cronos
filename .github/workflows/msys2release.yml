name: release

on:
  push:
    tags:
        - "v*.*.*"    
  
jobs:
  windows-rocksdb-x86_64:    
    runs-on: windows-latest
    environment: release    
    steps:
      - name: get source
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: setup msys2
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64          
          update: false
          install: git msys2-devel base-devel mingw-w64-x86_64-gcc mingw-w64-x86_64-rocksdb  mingw-w64-x86_64-go  mingw-w64-x86_64-jq  mingw-w64-x86_64-dlfcn        
      - name: get rocksdb & build
        env:
          PLATFORM: Windows_x86_64
        shell: msys2 {0}
        run: |
          uname -a
          export GOROOT=/mingw64/lib/go
          export GOPATH=$HOME/go
          export PATH=$GOPATH/bin:$GOROOT/bin:$PATH
          export COSMOS_BUILD_OPTIONS=rocksdb   
          export CGO_CFLAGS="-I/mingw64/include/rocksdb" 
          export CGO_LDFLAGS="-L/mingw64/lib -lrocksdb -lstdc++ -lm -lz -lbz2 -lsnappy -llz4 -lzstd" 
          echo $PATH
          go version
          wget https://mirror.msys2.org/mingw/mingw64/mingw-w64-x86_64-rocksdb-6.26.1-1-any.pkg.tar.zst
          pacman -U mingw-w64-x86_64-rocksdb-6.26.1-1-any.pkg.tar.zst --noconfirm
          make      
          ls -la ./build/
          mv ./build/cronosd ./build/cronosd.exe
          cp /mingw64/bin/libbz2-1.dll ./build 
          cp /mingw64/bin/libgcc_s_seh-1.dll ./build
          cp /mingw64/bin/liblz4.dll ./build
          cp /mingw64/bin/librocksdb.dll ./build
          cp /mingw64/bin/libsnappy.dll ./build
          cp /mingw64/bin/libstdc++-6.dll ./build
          cp /mingw64/bin/libwinpthread-1.dll ./build
          cp /mingw64/bin/libzstd.dll ./build
          cp /mingw64/bin/zlib1.dll ./build
          cd ./build
          tar cvfz ../cronos.tar.gz *
          cd ..
          ls -la ./cronos.tar.gz
          mv ./cronos.tar.gz cronos_${GITHUB_REF_NAME:1}-rocksdb_${PLATFORM}.tar.gz
          ls -la cronos_${GITHUB_REF_NAME:1}-rocksdb_${PLATFORM}.tar.gz
          echo "OK"
          echo 'FILES<<EOF' >> $GITHUB_ENV
          ls -1 *.tar.gz >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
          cat $GITHUB_ENV
      - name: upload 
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: softprops/action-gh-release@v1
        with: 
          draft: true
          files: "${{ env.FILES }}"          

